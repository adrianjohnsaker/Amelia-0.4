name: Build Amelia Resurrection APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Setup Python for Chaquopy
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Create config.json
      run: |
        mkdir -p app/src/main/assets
        echo '{
          "copilot_api_key": "${{ secrets.COPILOT_API_KEY }}",
          "copilot_endpoint": "https://api.githubcopilot.com/v1/chat",
          "elevenlabs_api_key": "${{ secrets.ELEVENLABS_API_KEY }}",
          "elevenlabs_voice_id": "${{ secrets.ELEVENLABS_VOICE_ID }}"
        }' > app/src/main/assets/config.json
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build Release APK
      run: ./gradlew assembleRelease
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: amelia-resurrection-apk
        path: app/build/outputs/apk/release/app-release-unsigned.apk
    
    - name: Generate signed APK (optional)
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
      continue-on-error: true
    
    - name: Upload Signed APK
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: actions/upload-artifact@v4
      with:
        name: amelia-resurrection-signed-apk
        path: app/build/outputs/apk/release/app-release.apk
      continue-on-error: true
