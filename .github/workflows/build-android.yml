name: Build Amelia Resurrection APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Amelia Resurrection APK
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Python 3.8 for Chaquopy
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Create config.json with secrets
        run: |
          mkdir -p app/src/main/assets
          cat << EOF > app/src/main/assets/config.json
          {
            "mistrel_api_key": "${{ secrets.MISTREL_API_KEY }}",
            "mistrel_endpoint": "https://api.githubmistrel.com/v1/chat",
            "elevenlabs_api_key": "${{ secrets.ELEVENLABS_API_KEY }}",
            "elevenlabs_voice_id": "${{ secrets.ELEVENLABS_VOICE_ID }}"
          }
          EOF

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Update Gradle wrapper to 8.5
        run: |
          sed -i 's/distributionUrl=.*gradle-.*-.*\.zip/distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-8.5-all.zip/g' gradle/wrapper/gradle-wrapper.properties
          echo "Updated gradle-wrapper.properties:"
          cat gradle/wrapper/gradle-wrapper.properties

      - name: Check Gradle and project
        run: |
          echo "Gradle version:"
          ./gradlew --version
          echo "Available tasks:"
          ./gradlew tasks --console=plain

      - name: Download dependencies (with retry)
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Downloading dependencies..."
            if ./gradlew dependencies --no-daemon --stacktrace; then
              echo "Dependencies downloaded successfully"
              break
            else
              echo "Attempt $i failed, retrying..."
              sleep 10
            fi
          done

      - name: Clean project
        run: ./gradlew clean --no-daemon --stacktrace

      - name: Build Debug APK (with retry)
        run: |
          for i in {1..2}; do
            echo "Attempt $i: Building Debug APK..."
            if ./gradlew assembleDebug \
              --no-daemon \
              --stacktrace \
              --info \
              --refresh-dependencies; then
              echo "Debug APK built successfully"
              break
            else
              echo "Debug build attempt $i failed, retrying..."
              ./gradlew clean --no-daemon
              sleep 15
            fi
          done
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false

      - name: Build Release APK (with retry)
        run: |
          for i in {1..2}; do
            echo "Attempt $i: Building Release APK..."
            if ./gradlew assembleRelease \
              --no-daemon \
              --stacktrace \
              --info \
              --refresh-dependencies; then
              echo "Release APK built successfully"
              break
            else
              echo "Release build attempt $i failed, retrying..."
              ./gradlew clean --no-daemon
              sleep 15
            fi
          done
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false

      - name: List build outputs
        run: |
          echo "Build outputs:"
          find . -name "*.apk" -type f -exec ls -lh {} \;

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: amelia-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: amelia-release-apk
          path: app/build/outputs/apk/release/app-release.apk
          if-no-files-found: ignore

      - name: Upload build reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            build/reports/
            app/build/reports/
          if-no-files-found: ignore
