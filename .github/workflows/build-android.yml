name: Build Amelia Resurrection APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Amelia Resurrection APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Python for Chaquopy
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Create config.json
        run: |
          mkdir -p app/src/main/assets
          cat << EOF > app/src/main/assets/config.json
          {
            "mistrel_api_key": "${{ secrets.MISTREL_API_KEY }}",
            "mistrel_endpoint": "https://api.githubmistrel.com/v1/chat",
            "elevenlabs_api_key": "${{ secrets.ELEVENLABS_API_KEY }}",
            "elevenlabs_voice_id": "${{ secrets.ELEVENLABS_VOICE_ID }}"
          }
          EOF

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Check Gradle wrapper
        run: |
          echo "Gradle wrapper version:"
          ./gradlew --version
          echo "Available tasks:"
          ./gradlew tasks --console=plain

      - name: Clean project
        run: ./gradlew clean --no-daemon --stacktrace

      - name: Build Release APK
        run: |
          ./gradlew assembleRelease \
            --no-daemon \
            --stacktrace \
            --info \
            --refresh-dependencies
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"

      - name: List build outputs
        run: |
          echo "Build outputs:"
          find . -name "*.apk" -type f
          ls -la app/build/outputs/apk/release/ || echo "Release directory not found"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: amelia-resurrection-apk
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            build/reports/
            app/build/reports/
          if-no-files-found: ignore
